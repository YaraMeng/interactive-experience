作业 3 - 交互体验
响应用户
本次作业邀请您使用 Python 设计一个交互体验。在您之前对数据和可视化探索的基础上，这次您的项目应当能够响应用户——通过输入、交互或参与。
您的作品可以是艺术性的、有趣的、实用的或实验性的。您可以设计一个小游戏、一件交互艺术品、一个受实时输入影响的生成系统，甚至是一个基于文本的工具，能够对用户的操作做出反应。关键是要创建一个能够处理用户输入并以有意义或创造性的方式做出响应的系统。
目标
实现用于处理用户输入（文本、鼠标、键盘、传感器等）的 Python 结构
应用逻辑、状态管理和交互原则来驱动动态输出
设计一个将美学和概念思考相结合的引人入胜的用户体验
展示创意编程作为一种设计或艺术实践
要求
项目必须主要用 Python 编写
必须包含至少一种用户输入形式（例如，文本命令、键盘/鼠标、声音输入、实时数据等）该系统应当对输入提供某种形式的反馈或响应。

您的项目可以是：
一个小型互动游戏或模拟程序
一个响应输入的互动生成式艺术作品
一个基于文本的互动体验（例如对话系统、分支叙事、聊天机器人）
一个将用户输入转化为视觉或声音输出的工具或系统

灵感来源
一个基于鼠标移动或点击而不断演化的生成式绘图工具
一个对声音做出反应的视觉作品
一个响应用户提示的基于文本的诗歌生成器
一个探索机遇、控制和互动的微型游戏
一个根据输入数据实时变化的装置式作品提交

提交一个包含您所有代码和资源的公共 GitHub 代码库
在 README.md 中包含清晰的说明，介绍如何运行您的项目以及交互方式
您可以在 README 中添加截图、GIF 动图或简短的演示视频，以增强清晰度和展示效果
创建代码库后尽快在 Blackboard 上提交您的 GitHub 链接（在截止日期前可更新）